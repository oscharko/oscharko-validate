/**
 * Validates a model value against a set of validation rules.
 *
 * @param modelValue - The value to be validated.
 * @param rules - The validation rules to be applied.
 * @returns - An array of error messages generated by the validation rules.
 */
import {TypeValidationRules, TypeValidationRulesLib} from "./types/types";
import {validationRulesLib} from "./validationRulesLib.ts";

export default (modelValue: string | number, rules: TypeValidationRules): string[] => {
  const rulesErrorMessages = []
  for (let x = 0; x < rules.length; x += 1) {
    if (
      !(
        typeof validationRulesLib[rules[x].name as keyof TypeValidationRulesLib](
          modelValue,
          rules[x]
        ) === 'boolean' &&
        validationRulesLib[rules[x].name as keyof TypeValidationRulesLib](
          modelValue,
          rules[x]
        ) === true
      )
    ) {
      rulesErrorMessages.push(
        validationRulesLib[rules[x].name as keyof TypeValidationRulesLib](
          modelValue,
          rules[x]
        )
      )
    }
  }
  return rulesErrorMessages
}
